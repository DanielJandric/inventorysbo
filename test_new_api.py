#!/usr/bin/env python3
"""
Test simple de la nouvelle API Yahoo Finance
"""

import logging
from yahoo_finance_api import YahooFinanceAPI

# Configuration du logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

def test_api():
    print("üß™ Test de la nouvelle API Yahoo Finance")
    print("=" * 50)
    
    try:
        # Initialiser l'API
        print("1Ô∏è‚É£ Initialisation de l'API...")
        api = YahooFinanceAPI()
        print("‚úÖ API initialis√©e avec succ√®s")
        
        # Test de connexion
        print("\n2Ô∏è‚É£ Test de connexion...")
        if api.test_connection():
            print("‚úÖ Connexion r√©ussie")
        else:
            print("‚ùå √âchec de la connexion")
            return
        
        # Test avec AAPL
        print("\n3Ô∏è‚É£ Test avec AAPL...")
        quote = api.get_quote("AAPL")
        if quote:
            print(f"‚úÖ AAPL - Prix: ${quote.get('regularMarketPrice', 'N/A')}")
            print(f"   Variation: {quote.get('regularMarketChangePercent', 'N/A'):.2f}%")
            print(f"   Volume: {quote.get('regularMarketVolume', 'N/A')}")
        else:
            print("‚ùå Aucune donn√©e pour AAPL")
        
        # Test avec MSFT
        print("\n4Ô∏è‚É£ Test avec MSFT...")
        quote = api.get_quote("MSFT")
        if quote:
            print(f"‚úÖ MSFT - Prix: ${quote.get('regularMarketPrice', 'N/A')}")
            print(f"   Variation: {quote.get('regularMarketChangePercent', 'N/A'):.2f}%")
        else:
            print("‚ùå Aucune donn√©e pour MSFT")
        
        print("\nüéâ Tous les tests sont pass√©s !")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_api() 